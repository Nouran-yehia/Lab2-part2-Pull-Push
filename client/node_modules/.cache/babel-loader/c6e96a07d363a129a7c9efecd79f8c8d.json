{"ast":null,"code":"var _jsxFileName = \"/home/noura/pull-push1/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport './index.js';\n\nfunction App() {\n  function sendMessage(message) {\n    fetch(url, {\n      method: 'POST',\n      body: message\n    });\n  }\n\n  form.onsubmit = function () {\n    let message = form.message.value;\n\n    if (message) {\n      form.message.value = '';\n      sendMessage(message);\n    }\n\n    return false;\n  };\n}\n\nfunction SubscribePane(elem, url) {\n  function showMessage(message) {\n    let messageElem = document.createElement('div');\n    messageElem.append(message);\n    elem.append(messageElem);\n  }\n\n  async function subscribe() {\n    let response = await fetch(url);\n\n    if (response.status == 502) {\n      await subscribe();\n    } else if (response.status != 200) {\n      showMessage(response.statusText);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      await subscribe();\n    } else {\n      let message = await response.text();\n      showMessage(message);\n      await subscribe();\n    }\n  }\n\n  subscribe();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    name: \"publish\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"subscribe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/noura/pull-push1/src/App.js"],"names":["React","App","sendMessage","message","fetch","url","method","body","form","onsubmit","value","SubscribePane","elem","showMessage","messageElem","document","createElement","append","subscribe","response","status","statusText","Promise","resolve","setTimeout","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAO,YAAP;;AAEA,SAASC,GAAT,GAAe;AACT,WAASC,WAAT,CAAqBC,OAArB,EAA8B;AAC5BC,IAAAA,KAAK,CAACC,GAAD,EAAM;AACTC,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,IAAI,EAAEJ;AAFG,KAAN,CAAL;AAID;;AAEDK,EAAAA,IAAI,CAACC,QAAL,GAAgB,YAAW;AACzB,QAAIN,OAAO,GAAGK,IAAI,CAACL,OAAL,CAAaO,KAA3B;;AACA,QAAIP,OAAJ,EAAa;AACXK,MAAAA,IAAI,CAACL,OAAL,CAAaO,KAAb,GAAqB,EAArB;AACAR,MAAAA,WAAW,CAACC,OAAD,CAAX;AACD;;AACD,WAAO,KAAP;AACD,GAPD;AAQD;;AAED,SAASQ,aAAT,CAAuBC,IAAvB,EAA6BP,GAA7B,EAAkC;AAEhC,WAASQ,WAAT,CAAqBV,OAArB,EAA8B;AAC5B,QAAIW,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AACAF,IAAAA,WAAW,CAACG,MAAZ,CAAmBd,OAAnB;AACAS,IAAAA,IAAI,CAACK,MAAL,CAAYH,WAAZ;AACD;;AACD,iBAAeI,SAAf,GAA2B;AACzB,QAAIC,QAAQ,GAAG,MAAMf,KAAK,CAACC,GAAD,CAA1B;;AAEA,QAAIc,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,YAAMF,SAAS,EAAf;AACD,KAFD,MAEO,IAAIC,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AACjCP,MAAAA,WAAW,CAACM,QAAQ,CAACE,UAAV,CAAX;AACA,YAAM,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAjC,CAAN;AACA,YAAML,SAAS,EAAf;AACD,KAJM,MAIA;AACL,UAAIf,OAAO,GAAG,MAAMgB,QAAQ,CAACM,IAAT,EAApB;AACAZ,MAAAA,WAAW,CAACV,OAAD,CAAX;AACA,YAAMe,SAAS,EAAf;AACD;AACF;;AAEDA,EAAAA,SAAS;AAEX,sBACK;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAM,IAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,eAEM;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,CADA,eAMI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADG,CADL;AAcH;;AAED,eAAejB,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './index.js';\n\nfunction App() {\n      function sendMessage(message) {\n        fetch(url, {\n          method: 'POST',\n          body: message\n        });\n      }\n    \n      form.onsubmit = function() {\n        let message = form.message.value;\n        if (message) {\n          form.message.value = '';\n          sendMessage(message);\n        }\n        return false;\n      };\n    }\n    \n    function SubscribePane(elem, url) {\n    \n      function showMessage(message) {\n        let messageElem = document.createElement('div');\n        messageElem.append(message);\n        elem.append(messageElem);\n      }\n      async function subscribe() {\n        let response = await fetch(url);\n    \n        if (response.status == 502) {\n          await subscribe();\n        } else if (response.status != 200) {\n          showMessage(response.statusText);\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          await subscribe();\n        } else {\n          let message = await response.text();\n          showMessage(message);\n          await subscribe();\n        }\n      }\n    \n      subscribe();\n    \n    return(\n         <div className=\"App\">\n      <header className=\"App-header\">\n      <form name=\"publish\">\n            <input type=\"text\" name=\"message\" />\n            <input type=\"submit\" value=\"Send\" />\n          </form>\n\n          <div id=\"subscribe\">\n            \n          </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}