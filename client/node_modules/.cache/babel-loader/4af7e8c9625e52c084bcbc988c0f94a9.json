{"ast":null,"code":"var _jsxFileName = \"/home/noura/pull-push1/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from 'axios';\nimport './index.js';\nimport io from 'socket.io-client';\nconst socket = io.connect('http://localhost:3000');\nlet id = Math.ceil(Math.random() * 10000);\n\nconst App = props => {\n  const [messages, setMessages] = useState([]);\n  const [uname, setUname] = useState([]);\n  const [input, setInput] = useState('');\n  const [inputUser, setinputUser] = useState('');\n  useEffect(() => {\n    socket.on('new-message', message => setMessages(messages => messages => messages.concat(message)));\n  }, []); //[] to call it once \n\n  const handleChangeM = e => {\n    const {\n      target: {\n        value\n      }\n    } = e;\n    setInput(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    socket.emit('message', input);\n    setInput('');\n  };\n\n  const handleChangeU = e => {\n    const {\n      target: {\n        value\n      }\n    } = e;\n    setinputUser(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    name: \"publish\",\n    id: \"form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"content\",\n    type: \"text\",\n    name: \"content\",\n    placeholder: \"Enter your message\",\n    onChange: handleChangeM,\n    value: input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"username\",\n    type: \"text\",\n    name: \"unam\",\n    placeholder: \"Enter your name\",\n    onChange: handleChangeU,\n    value: inputUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, messages.map(m => /*#__PURE__*/React.createElement(\"h4\", {\n    key: m,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }, m))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/noura/pull-push1/client/src/App.js"],"names":["React","useState","useEffect","axios","io","socket","connect","id","Math","ceil","random","App","props","messages","setMessages","uname","setUname","input","setInput","inputUser","setinputUser","on","message","concat","handleChangeM","e","target","value","handleSubmit","preventDefault","emit","handleChangeU","map","m"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAACE,OAAH,CAAW,uBAAX,CAAf;AAGA,IAAIC,EAAE,GAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAc,KAAxB,CAAT;;AAEA,MAAMC,GAAG,GAAGC,KAAD,IAAW;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AAELC,EAAAA,SAAS,CAAE,MAAK;AACZG,IAAAA,MAAM,CAACgB,EAAP,CAAU,aAAV,EAAyBC,OAAD,IAAaR,WAAW,CAACD,QAAQ,IAAKA,QAAQ,IAAIA,QAAQ,CAACU,MAAT,CAAgBD,OAAhB,CAA1B,CAAhD;AAEH,GAHQ,EAGP,EAHO,CAAT,CANsB,CAShB;;AAED,QAAME,aAAa,GAAIC,CAAD,IAAM;AAC1B,UAAK;AAACC,MAAAA,MAAM,EAAC;AAACC,QAAAA;AAAD;AAAR,QAAmBF,CAAxB;AACAP,IAAAA,QAAQ,CAACS,KAAD,CAAR;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACI,cAAF;AACAxB,IAAAA,MAAM,CAACyB,IAAP,CAAY,SAAZ,EAAuBb,KAAvB;AAEAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACE,GALH;;AAOA,QAAMa,aAAa,GAAIN,CAAD,IAAM;AAC3B,UAAK;AAACC,MAAAA,MAAM,EAAC;AAACC,QAAAA;AAAD;AAAR,QAAmBF,CAAxB;AACAL,IAAAA,YAAY,CAACO,KAAD,CAAZ;AACD,GAHA;;AAIC,sBACG;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,EAAC,MAAxB;AAA+B,IAAA,QAAQ,EAAEC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM;AAAO,IAAA,EAAE,EAAC,SAAV;AAAqB,IAAA,IAAI,EAAC,MAA1B;AAAiC,IAAA,IAAI,EAAC,SAAtC;AAAgD,IAAA,WAAW,EAAC,oBAA5D;AAAkF,IAAA,QAAQ,EAAEJ,aAA5F;AAA2G,IAAA,KAAK,EAAEP,KAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,eAEM;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,IAAI,EAAC,MAA1B;AAAiC,IAAA,IAAI,EAAC,MAAtC;AAA6C,IAAA,WAAW,EAAC,iBAAzD;AAA2E,IAAA,QAAQ,EAAEc,aAArF;AAAoG,IAAA,KAAK,EAAEZ,SAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,eAGM;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,CADA,eAOI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEN,QAAQ,CAACmB,GAAT,CAAaC,CAAC,iBAAI;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,CAAb,CAAlB,CAFF,CADF,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADF,CADF,CAPJ,eAyBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAzBZ,CADG,CADH;AAkCA,CA7DN;;AAgEA,eAAetB,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport './index.js';\nimport io from 'socket.io-client';\n\nconst socket = io.connect('http://localhost:3000');\n\n\nlet id = Math.ceil(Math.random()*10000);\n\nconst App= (props) => {\n     const [messages, setMessages] = useState([])\n     const [uname, setUname] = useState([])\n     const [input, setInput] = useState('');\n     const [inputUser, setinputUser] = useState('');\n     \nuseEffect (()=> {\n    socket.on('new-message',(message) => setMessages(messages => (messages => messages.concat(message)))\n    )\n},[]) //[] to call it once \n\n     const handleChangeM = (e) =>{\n       const{target:{value}} = e\n       setInput(value)\n     }\n\n     const handleSubmit = (e) => {\n      e.preventDefault();\n      socket.emit('message', input)\n      \n      setInput('');\n       } \n         \n     const handleChangeU = (e) =>{\n      const{target:{value}} = e\n      setinputUser(value)\n    }\n      return(\n         <div className=\"App\">\n      <header className=\"App-header\">\n      <form name=\"publish\" id=\"form\" onSubmit={handleSubmit}>\n            <input id=\"content\"  type=\"text\" name=\"content\" placeholder=\"Enter your message\"  onChange={handleChangeM} value={input} />\n            <input id=\"username\" type=\"text\" name=\"unam\" placeholder=\"Enter your name\" onChange={handleChangeU} value={inputUser} />\n            <input type=\"submit\"  />\n          </form>\n\n          <div id=\"content\">\n            <table>\n              <tr>\n                <td>\n               {\n                  messages.map(m => <h4 key={m}>{m}</h4>)\n                  }\n                  </td>\n                  <td>\n                      {/* {uname.map(n => <h6 key={n.uname}>From: {n.uname}</h6>)} */}\n\n                  </td>\n                  \n                 \n              </tr>\n            </table>\n                 \n                  </div>\n                  <div>\n                  <br></br>\n\n          </div>\n      </header>\n    </div>\n  );\n     }\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}